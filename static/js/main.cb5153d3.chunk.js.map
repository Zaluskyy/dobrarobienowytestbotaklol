{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["randMinMax","min","max","floor","Math","random","App","canvas","useRef","requestRef","React","useState","window","innerWidth","canvasSize","setCanvasSize","Magic","x","y","this","velocity","radius","c","current","getContext","beginPath","arc","PI","stroke","width","height","draw","magic","useEffect","i","push","init","animate","requestAnimationFrame","clearRect","innerHeight","length","update","addEventListener","className","ref","style","marginTop","backgroundColor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gPAMMA,EAAa,SAACC,EAAKC,GAAoB,IAAfC,EAAc,wDAC1C,OAAIA,EAGGC,KAAKD,MAAMC,KAAKC,UAAUH,EAAID,EAAI,GAAGA,GAFrCG,KAAKC,UAAUH,EAAID,GAAKA,GA8FlBK,MAnFf,WACE,IAAMC,EAASC,iBAAO,MAChBC,EAAaC,IAAMF,SAKzB,EAAoCG,mBAASC,OAAOC,WAAW,EAAE,IAAjE,mBAAOC,EAAP,KAAmBC,EAAnB,KAKMC,EAZO,WAaX,WAAYC,EAAGC,GAAG,oBAChBC,KAAKF,EAAIA,EACTE,KAAKD,EAAIA,EACTC,KAAKC,SAAW,CACdH,EAAGjB,GAAY,EAAG,GAClBkB,EAAGlB,GAAY,EAAG,IAEpBmB,KAAKE,OAhBQ,GAJJ,wCAsBX,WACE,IAAMC,EAAIf,EAAOgB,QAAQC,WAAW,MACpCF,EAAEG,YACFH,EAAEI,IAAIP,KAAKF,EAAGE,KAAKD,EAAGC,KAAKE,OAAQ,EAAW,EAARjB,KAAKuB,IAAM,GACjDL,EAAEM,WA1BO,oBA6BX,WAEET,KAAKF,GAAKE,KAAKC,SAASH,EACxBE,KAAKD,GAAKC,KAAKC,SAASF,GAEvBC,KAAKF,EAAEV,EAAOgB,QAAQM,MAAMV,KAAKE,QAAQF,KAAKF,EAAEE,KAAKE,UACtDF,KAAKC,SAASH,IAAM,IAEnBE,KAAKD,EAAEX,EAAOgB,QAAQO,OAAOX,KAAKE,QAAQF,KAAKD,EAAEC,KAAKE,UACvDF,KAAKC,SAASF,IAAM,GAGpBC,KAAKY,WAzCI,KA6CPC,EAAQ,GAYdC,qBAAU,YAVE,WACV,IAAI,IAAIC,EAAI,EAAGA,EAAI,GAAIA,IAAI,CACzB,IAAMjB,EAAIjB,EAAW,GAAMO,EAAOgB,QAAQM,MAAM,IAC1CX,EAAIlB,EAAW,GAAMO,EAAOgB,QAAQO,OAAO,IACjDE,EAAMG,KAAK,IAAInB,EAAMC,EAAGC,KAO1BkB,GACDC,OAGD,IAAMA,EAAU,SAAVA,IACJ,IAAMf,EAAIf,EAAOgB,QAAQC,WAAW,MACpCf,EAAWc,QAAUe,sBAAsBD,GAC3Cf,EAAEiB,UAAU,EAAG,EAAG3B,OAAOC,WAAYD,OAAO4B,aAC5C,IAAI,IAAIN,EAAI,EAAGA,EAAIF,EAAMS,OAAQP,IAC/BF,EAAME,GAAGQ,UASb,OAJA9B,OAAO+B,iBAAiB,UAAU,WAChC5B,EAAcH,OAAOC,WAAW,EAAE,OAIlC,qBAAK+B,UAAU,MAAf,SACE,wBAAQC,IAAKtC,EAAQsB,MAAOf,EAAYgB,OAAQhB,EAAYgC,MAAO,CAAEC,UAAU,QAASC,gBAAiB,eCrFhGC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.cb5153d3.chunk.js","sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\n\n\nimport './App.css';\n\n\nconst randMinMax = (min, max, floor=false)=>{\n  if(!floor){\n  return Math.random()*(max-min)+min\n  }\n  return Math.floor(Math.random()*(max-min+1)+min)\n}\n\nconst distance = (x1, y1, x2, y2)=>{\n  const distanceX = x1 - x2\n  const distanceY = y1 - y2\n  return Math.sqrt(Math.pow(distanceX, 2)+Math.pow(distanceY, 2))\n}\n\nfunction App() {\n  const canvas = useRef(null)\n  const requestRef = React.useRef()\n\n  const ballSize = 50\n  \n\n  const [canvasSize, setCanvasSize] = useState(window.innerWidth/2-50)\n\n  \n  \n\n  class Magic{\n    constructor(x, y){\n      this.x = x\n      this.y = y\n      this.velocity = {\n        x: randMinMax(-2, 2),\n        y: randMinMax(-2, 2)\n      }\n      this.radius = ballSize\n    }\n    draw(){\n      const c = canvas.current.getContext(\"2d\");\n      c.beginPath()\n      c.arc(this.x, this.y, this.radius, 0, Math.PI*2, false)\n      c.stroke()\n    }\n\n    update(){\n\n      this.x += this.velocity.x\n      this.y += this.velocity.y\n\n    if(this.x>canvas.current.width-this.radius||this.x<this.radius){\n      this.velocity.x *= -1\n    }\n    if(this.y>canvas.current.height-this.radius||this.y<this.radius){\n      this.velocity.y *= -1\n    }\n\n      this.draw()\n    }\n  }\n\n  const magic = []\n\n  const init =()=>{\n    for(let i = 0; i < 10; i++){\n      const x = randMinMax(0+50, canvas.current.width-50)\n      const y = randMinMax(0+50, canvas.current.height-50)\n      magic.push(new Magic(x, y))\n    }\n  }\n\n  // const magic = new Magic(200, 200)\n\n  useEffect(() => {\n    init()\n   animate()\n  });\n\n  const animate = ()=>{\n    const c = canvas.current.getContext(\"2d\");\n    requestRef.current = requestAnimationFrame(animate);\n    c.clearRect(0, 0, window.innerWidth, window.innerHeight)\n    for(let i = 0; i < magic.length; i++){\n      magic[i].update()\n    }\n    // magic.draw()\n  }\n\n  window.addEventListener(\"resize\", ()=>{\n    setCanvasSize(window.innerWidth/2-50)\n  })\n\n  return (\n    <div className=\"App\">\n      <canvas ref={canvas} width={canvasSize} height={canvasSize} style={{ marginTop:\"150px\", backgroundColor: \"yellow\"}} ></canvas>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}