{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","canvas","useRef","requestRef","React","magic","x","y","this","c","current","getContext","arc","Math","PI","stroke","useEffect","animate","requestAnimationFrame","clearRect","window","innerWidth","innerHeight","draw","className","ref","width","height","style","marginTop","backgroundColor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAyCeA,MApCf,WACE,IAAMC,EAASC,iBAAO,MAChBC,EAAaC,IAAMF,SAcnBG,EAAQ,IAhBD,WAKX,WAAYC,EAAGC,GAAG,oBAChBC,KAAKF,EAAIA,EACTE,KAAKD,EAAIA,EAPA,wCASX,WACE,IAAME,EAAIR,EAAOS,QAAQC,WAAW,MACpCF,EAAEG,IAAIJ,KAAKF,EAAGE,KAAKD,EAAG,GAAI,EAAW,EAARM,KAAKC,IAAM,GACxCL,EAAEM,aAZO,KAgBC,CAAU,IAAK,KAE7BC,qBAAU,WACTC,OAGD,IAAMA,EAAU,SAAVA,IACJ,IAAMR,EAAIR,EAAOS,QAAQC,WAAW,MACpCR,EAAWO,QAAUQ,sBAAsBD,GAC3CR,EAAEU,UAAU,EAAG,EAAGC,OAAOC,WAAYD,OAAOE,aAC5CjB,EAAMkB,QAGR,OACE,qBAAKC,UAAU,MAAf,SACE,wBAAQC,IAAKxB,EAAQyB,MAAO,IAAKC,OAAQ,IAAKC,MAAO,CAAEC,UAAU,QAASC,gBAAiB,cCxBlFC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.41fdd650.chunk.js","sourcesContent":["import React, { useRef, useEffect } from 'react';\n\n\nimport './App.css';\n\nfunction App() {\n  const canvas = useRef(null)\n  const requestRef = React.useRef()\n\n  class Magic{\n    constructor(x, y){\n      this.x = x\n      this.y = y\n    }\n    draw(){\n      const c = canvas.current.getContext(\"2d\");\n      c.arc(this.x, this.y, 50, 0, Math.PI*2, false)\n      c.stroke()\n    }\n  }\n\n  const magic = new Magic(200, 200)\n\n  useEffect(() => {\n   animate()\n  });\n\n  const animate = ()=>{\n    const c = canvas.current.getContext(\"2d\");\n    requestRef.current = requestAnimationFrame(animate);\n    c.clearRect(0, 0, window.innerWidth, window.innerHeight)\n    magic.draw()\n  }\n\n  return (\n    <div className=\"App\">\n      <canvas ref={canvas} width={500} height={500} style={{ marginTop:\"150px\", backgroundColor: \"white\"}} ></canvas>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}